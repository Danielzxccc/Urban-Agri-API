openapi: 3.0.0
info:
  title: AGRIHUB API
  version: 1.0.0
security:
  - sessionAuth: []
paths:
  /healthcheck:
    get:
      tags:
        - Healthcheck
      description: Responds if the app is up and running
      responses:
        "200":
          description: App is up and running
  #authentication paths
  /api/auth/login:
    post:
      tags:
        - Auth
      summary: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginSchema"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAuthResponse"
        "401":
          description: Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /api/auth/me:
    get:
      tags:
        - Auth
      summary: get current user from session
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSchema"
        "401":
          description: Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /api/account/signup:
    post:
      tags:
        - Account
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegisterSchema"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      message:
                        type: string
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /api/account/send-verification:
    post:
      tags:
        - Account
      summary: Register a user
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /api/account/verify-email/{id}:
    get:
      tags:
        - Account
      summary: verify email
      deprecated: true
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Token Expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /api/account/profile-completion:
    post:
      tags:
        - Account
      summary: complete user details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCompletionSchema"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAuthResponse"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /api/account/setup-profile:
    post:
      tags:
        - "Account"
      summary: "Setup username and tags"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAuthResponse"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

# components
components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      name: session
      in: cookie
  schemas:
    # Authentication Schemas
    UserLoginSchema:
      type: object
      required:
        - user
        - password
      properties:
        user:
          type: string
          default: daniel1234
        password:
          type: string
          default: qweR123$
    UserRegisterSchema:
      type: object
      required:
        - email
        - password
        - confirmPassword
      properties:
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    UserCompletionSchema:
      type: object
      required:
        - firstname
        - lastname
        - birthdate
        - present_address
        - zipcode
        - district
        - municipality
      properties:
        firstname:
          type: string
        lastname:
          type: string
        birthdate:
          type: string
        present_address:
          type: string
        zipcode:
          type: string
        district:
          type: string
        municipality:
          type: string
    UserSchema:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        birthdate:
          type: string
        present_address:
          type: string
        zipcode:
          type: string
        district:
          type: string
        municipality:
          type: string
        verification_level:
          type: string
        createdat:
          type: string
        updatedat:
          type: string
        avatar:
          type: string
    UserProfile:
      type: object
      properties:
        avatar:
          type: string
          format: binary
        username:
          type: string
        tags:
          type: array
          items:
            type: string
    UserAuthResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: "#/components/schemas/UserSchema"
    ErrorResponse:
      type: object
      properties:
        error:
          type: boolean
          default: true
        message:
          type: string
          default: Authorized
        validationErrors:
          type: array
          items:
            $ref: "#/components/schemas/ZodValidationError"
    ServerError:
      type: object
      properties:
        error:
          type: boolean
          default: true
        message:
          type: string
          default: Server Error
    ZodValidationError:
      type: object
      properties:
        code:
          type: string
        expected:
          type: string
        received:
          type: string
        path:
          type: array
          items:
            type: string
        message:
          type: string
tags: []
